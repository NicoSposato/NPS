@model ElegiTusFotos.Models.ProyectoViewModel
@using ElegiTusFotos.Models

@{
    ViewBag.Title = "Crear Proyecto";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Styles.Render("~/Content/blueimp-gallery")

<noscript><link href="@Url.Content("~/Content/css/jquery.fileupload-noscript.css")" rel="stylesheet" type="text/css"></noscript>
<noscript><link href="@Url.Content("~/Content/css/jquery.fileupload-ui-noscript.css")" rel="stylesheet" type="text/css"></noscript>


<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.12.3/css/bootstrap-select.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.12.3/js/bootstrap-select.min.js"></script>

<h2>Nuevo Proyecto</h2>
@Html.HiddenFor(model => model.ProyectoTipoSeguridadID)
@Html.HiddenFor(model => model.CatalogoID)
<div class="form-horizontal">
    <hr />
    <div class="form-group">
        @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Seguridad</label>
        <div id="securityField" class="col-md-5">
            <select title="Seleccione seguridad" name="securitySelector" data-width="280px" class="selectpicker" style="height:2.3em;">
                <option value="1" data-content='<img src=@Url.Content("https://wetf.s3.amazonaws.com/static/img/icon-segalta.png") width="40px"><label id="seguridad_alta"><b>Seguridad ALTA</b></label>'></option>
                <option value="2" class="@((ViewBag.PlanID!=(int)Plan.state.DEMO)?String.Empty:"hidden")" data-content='<img src=@Url.Content("https://wetf.s3.amazonaws.com/static/img/icon-segmedia.png") width="40px"><label id="seguridad_media"><b>Seguridad MEDIA</b></label>'></option>
                <option value="3" class="@((ViewBag.PlanID!=(int)Plan.state.DEMO)?String.Empty:"hidden")" data-content='<img src=@Url.Content("https://wetf.s3.amazonaws.com/static/img/icon-segbaja.png") width="40px"><label id="seguridad_baja"><b>Seguridad BAJA</b></label>'></option>
            </select>
        </div>
    </div>

    @if (Model.ProyectoTipoSeguridadID == (int)ProyectoTipoSeguridad.state.Alta)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.ClienteNombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.ClienteNombre, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
            </div>
        </div>
    }

    <div class="form-group">
        @Html.LabelFor(model => model.NuevaSesionTitulo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.EditorFor(model => model.NuevaSesionTitulo, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
        </div>
    </div>

    @*<div class="form-group">
            <div class="col-md-offset-2 col-md-5">
                <a class="btn btn-orange" href="@Url.Action("Edit", "Proyecto", new { id = Model.ProyectoID })">
                    <i class="fa fa-pencil-square-o"></i>  Editar
                </a>
            </div>
        </div>*@
</div>

<div id="mensajes" style="display:none" role="alert">
</div>
<div id="seccionFotoUploader">
    <h3>Agregar Fotos</h3>

    <div class="container">
        <!-- The file upload form used as target for the file upload widget -->
        <form id="fileupload" action="@Url.Action("CargarFotos", "Proyecto", new { controller = "Proyecto", id = @Model.CatalogoID })" method="POST" enctype="multipart/form-data">
            <!-- The fileupload-buttonbar contains buttons to add/delete files and start/cancel the upload -->
            <div class="row fileupload-buttonbar">
                <div>
                    <!-- The fileinput-button span is used to style the file input field as button -->
                    <span class="btn btn-success fileinput-button">
                        <i class="glyphicon glyphicon-plus"></i>
                        <span>Agregar fotos...</span>
                        <!-- Solo .jpg y .jpeg -->
                        <input type="file" name="files[]" multiple="" draggable="true" accept=".jpg,.jpeg">
                    </span>
                    <button type="submit" class="btn btn-primary start" id="btnUpload">
                        <i class="glyphicon glyphicon-upload"></i>
                        <span>Comenzar subida</span>
                    </button>
                    <button type="reset" class="btn btn-warning cancel">
                        <i class="glyphicon glyphicon-ban-circle"></i>
                        <span>Cancelar subida</span>
                    </button>
                    <button type="button" class="btn btn-default" id="retryFailed" style="display:none">
                        <i class="glyphicon glyphicon-repeat"></i>
                        <span>Reintentar fallidos</span>
                    </button>
                    @*<button type="button" class="btn btn-danger delete">
                            <i class="glyphicon glyphicon-trash"></i>
                            <span>Borrar</span>
                        </button>*@
                    <input type="checkbox" class="toggle">
                    <!-- The global file processing state -->
                    <span class="fileupload-process"></span>
                </div>
                <!-- The global progress state -->
                <div class="col-lg-5 fileupload-progress fade">
                    <!-- The global progress bar -->
                    <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100">
                        <div class="progress-bar progress-bar-success" style="width:0%;"></div>
                    </div>
                    <!-- The extended global progress state -->
                    <div class="progress-extended">&nbsp;</div>
                </div>
            </div>
            <span style="display:none;" id="procesoFotos" class="size">Procesadas <span id="fotosProcesadas"></span> fotos de <span id="cantFotos"></span></span>
            <!-- The table listing the files available for upload/download -->
            <table role="presentation" class="table table-striped"><tbody class="files"></tbody></table>
        </form>
    </div>
</div>


<div>
    <a class="btn btn-default" href="@Url.Action("Index", "Proyecto", new { controller = "Proyecto" })">
        Volver
    </a>
</div>

<link rel="stylesheet" type="text/css" href="~/Content/sweetalert.css">
<script src="~/Scripts/js/sweetalert.min.js"></script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}
<script id="template-fotos" type="text/x-tmpl">
    {% for (var i=0, item; item = o[i]; i++) { %}
    <div class="col-xs-2">
        <a href="{%=item.Url%}" title="{%=item.FotoID%}" data-gallery>
            <img src="{%=item.ThumbPath%}" alt="125x125" style="width: 150px; height: 150px; overflow: auto;"
                 class="img img-thumbnail">
        </a>
        <div class="lnk_remove_foto" style="text-align:right; margin-top: -20px; margin-right:5px;">
            <span style="display:none">{%=item.FotoID%}</span>
            <i class="fa fa-trash-o" style="background-color:white; cursor:pointer;"></i>
        </div>
    </div>
    {% }
    %}
</script>

<!-- The template to display files available for upload -->
<script id="template-upload" type="text/x-tmpl">
    {% for (var i=0, file; file=o.files[i]; i++) { %}
    <tr class="template-upload fade">
        <td>
            <span class="preview"></span>
        </td>
        <td>
            <p class="name">{%=file.name%}</p>
            <strong class="error text-danger"></strong>
        </td>
        <td>
            <p class="size">Procesando...</p>
            <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0"><div class="progress-bar progress-bar-success" style="width:0%;"></div></div>
        </td>
        <td>
            {% if (!i && !o.options.autoUpload) { %}
            <button class="btn btn-primary start" disabled>
                <i class="glyphicon glyphicon-upload"></i>
                <span>Comenzar</span>
            </button>
            {% } %}
            {% if (!i) { %}
            <button class="btn btn-warning cancel">
                <i class="glyphicon glyphicon-ban-circle"></i>
                <span>Cancelar</span>
            </button>
            {% } %}
        </td>
    </tr>
    {% } %}
</script>
<!-- The template to display files available for download -->
<script id="template-download" type="text/x-tmpl">
    {% for (var i=0, file; file=o.files[i]; i++) { %}

    {% if (file.error) { %}
    <tr class="template-download fade">
        <td>
            <span class="preview">
                {% if (file.thumbnailUrl) { %}
                <a href="{%=file.url%}" title="{%=file.name%}" download="{%=file.name%}"><img src="{%=file.thumbnailUrl%}"></a>
                {% } %}
            </span>
        </td>
        <td>
            <p class="name">
                {% if (file.url) { %}
                <a href="{%=file.url%}" title="{%=file.name%}" download="{%=file.name%}">{%=file.name%}</a>
                {% } else { %}
                <span>{%=file.name%}</span>
                {% } %}
            </p>
            {% if (file.error) { %}
            <div><span class="label label-danger">Error</span> {%=file.error%}</div>
            {% } %}
        </td>
        <td>
            <span class="size">{%=o.formatFileSize(file.size)%}</span>
        </td>
        <td>
            {% if (file.deleteUrl) { %}
            <button class="btn btn-danger delete" data-type="{%=file.deleteType%}" data-url="{%=file.deleteUrl%}" {% if (file.deletewithcredentials) { %} data-xhr-fields='{"withCredentials":true}' {% } %}>
                <i class="glyphicon glyphicon-trash"></i>
                <span>Borrar</span>
            </button>
            <input type="checkbox" name="delete" value="1" class="toggle">
            {% } else { %}
            <button class="btn btn-warning cancel">
                <i class="glyphicon glyphicon-ban-circle"></i>
                <span>Cancelar</span>
            </button>
            {% } %}
        </td>
    </tr>
    {% } %}
    {% } %}
</script>

<!-- The jQuery UI widget factory, can be omitted if jQuery UI is already included -->
<script src="~/Scripts/js/vendor/jquery.ui.widget.js"></script>
<!-- The Templates plugin is included to render the upload/download listings -->
<!-- The Templates plugin is included to render the upload/download listings -->
<script src="~/Scripts/js/tmpl.min.js"></script>
<!-- The Load Image plugin is included for the preview images and image resizing functionality -->
<script src="~/Scripts/js/load-image.all.min.js"></script>
<!-- The Canvas to Blob plugin is included for image resizing functionality -->
<script src="~/Scripts/canvas-to-blob.min.js"></script>
<!-- blueimp Gallery script -->
<script src="~/Scripts/js/jquery.blueimp-gallery.min.js"></script>
<!-- The Iframe Transport is required for browsers without support for XHR file uploads -->
<script src="~/Scripts/js/jquery.iframe-transport.js"></script>
<!-- The basic File Upload plugin -->
<script src="~/Scripts/js/jquery.fileupload.js"></script>
<!-- The File Upload processing plugin -->
<script src="~/Scripts/js/jquery.fileupload-process.js"></script>
<!-- The File Upload image preview & resize plugin -->
<script src="~/Scripts/js/jquery.fileupload-image.js"></script>
<!-- The File Upload validation plugin -->
<script src="~/Scripts/js/jquery.fileupload-validate.js"></script>
<!-- The File Upload user interface plugin -->
<script src="~/Scripts/js/jquery.fileupload-ui.js"></script>
<!-- The main application script -->
<script src="~/Scripts/js/main.js"></script>

<script>
    var UrlCreateCatalogo = '@Url.Action("Create", "Catalogo")';
    var UrlCreatePedido = '@Url.Action("Create", "Pedido")';
    var UrlCuentaIndex = '@Url.Action("Index", "Cuenta")';
    var errorData;
    var pendingList = [];
    var totalArchivosSeleccionados = 0;
    var totalArchivosCargados = 0;
    var totalArchivosSubidos = 0;

    $(document).ready(function () {
		console.log('Documento listo');
        $('select[name=securitySelector]').val($("#ProyectoTipoSeguridadID").val());
        $('.selectpicker').prop('disabled', true);
        $('.selectpicker').selectpicker('refresh');

        inicializarFileUpload();
        var msj = "Tamaño mínimo recomendable: 1600x1200 (Más de 2MP)";
        mostrarMensaje(msj, "alert alert-info", 0);
    });
	
	function getTotalFilesExceeded() {
    var totalArchivosPermitidos = window.totalFilesLimit;
    if (totalArchivosSeleccionados + totalArchivosCargados > totalArchivosPermitidos) {
        return true;
    }
    return false;
	}

    function inicializarFileUpload() {
		console.log('Inicializando FileUpload');

        $('#fileupload').bind('fileuploadfail', function (e, data) {
			console.log('fileuploadfail');
            console.log('Error!');
            errorData = data;

            if (errorData.files != undefined && errorData.files.length > 0) {
                pendingList.push(data);
            }
        });

        $('#fileupload').bind('fileuploadprocessdone', function (e, data) {
			console.log('fileuploadprocessdone');
            totalArchivosCargados++;
            $('#fotosProcesadas').text(totalArchivosCargados);

            if (totalArchivosCargados == totalArchivosSeleccionados)
                $('#btnUpload').attr('disabled', false);

        });

        $('#fileupload').bind('fileuploadchange', function (e, data) {
			if (getTotalFilesExceeded()) {
				mostrarCapacidad();
				e.preventDefault();
			} else {
				totalArchivosCargados = 0;
				totalArchivosSeleccionados = data.files.length;
				$('#procesoFotos').show();
				$('#cantFotos').text(totalArchivosSeleccionados);
				$('#btnUpload').attr('disabled', true);
			}
		});

        $('#fileupload').bind('fileuploaddone', function (e, data) {
			console.log('fileuploaddone');
            if (pendingList.length > 0) $('#retryFailed').show();
            else $('#retryFailed').hide();

            $("tr.template-download").each(function (index) {
                console.log($(this).children('span.label-danger'));
                if ($(this).find('span.label-danger').length == 0) {
                    $(this).remove();
                }
            });

            totalArchivosSubidos++;

            if (totalArchivosSubidos == totalArchivosCargados) {
                mostrarPopup();
            }
        });

        $('#retryFailed').click(function () {
			console.log('retryFailed clicked');
            pendingList.forEach(function (data) { data.submit(); });
            pendingList = [];
        });
    }


    function mostrarPopup() {
		console.log('Mostrando Popup correcto');
        swal({
            title: "Procesamos las fotos correctamente",
            text: "¿Que deseas hacer ahora?",
            type: "success",
            showCancelButton: true,
            showCloseButton: true,
            confirmButtonText: @Json.Encode(Model.EsSeguridadAlta) ? "Asignar producto" : "Ir a Proyectos",
            cancelButtonText:  "Nueva galeria",
            closeOnConfirm: true,
            closeOnCancel: true
        }, function (isConfirm) {
            if (isConfirm) {
               window.location = @Json.Encode(Model.EsSeguridadAlta) ? window.UrlCreatePedido + '?proyectoID=' + @Model.ProyectoID + '&clienteID=' + @Model.ClienteID
                                  : '@Url.Action("Index", "Proyecto")';
            }
            else {
                window.location = window.UrlCreateCatalogo + '?proyId=' + @Model.ProyectoID;
                $('#guardarCont').attr('disabled', false);
            }
        });
    }

    function mostrarCapacidad() {
		console.log('Mostrando Capacidad limitada');
        swal({
            title: "Tu plan llegó a su límite",
            text: "¿Deseas obtener mas GB?",
            type: "error",
            showCancelButton: true,
            showCloseButton: true,
            confirmButtonText: "Si",
            cancelButtonText: "No, Seguir sin espacio",
            closeOnConfirm: true,
            closeOnCancel: true
        }, function (isConfirm) {
            if (isConfirm) {
                window.location = window.UrlCuentaIndex;
            }
            else {
                window.location = window.UrlHomeIndex;
            }
        });
    }


    if (capacidadExcedida == 'True') {
        mostrarCapacidad();
    }

    function mostrarMensaje(msg, cssClass, conFade) {
        $('#mensajes').html(msg);
        $('#mensajes').addClass(cssClass);
        $('#mensajes').fadeIn("slow");
        if (conFade) {
            $('#mensajes').delay(1000).fadeOut("slow");
        }
    }
</script>
@Scripts.Render("~/bundles/jqueryval")
